<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mrprez.roborally.model">
	<resultMap id="userResultMap" type="com.mrprez.roborally.model.User">
		<id property="username" column="USERNAME" />
		<result property="eMail" column="E_MAIL" />
	</resultMap>
	<resultMap id="game" type="com.mrprez.roborally.model.Game">
		<id property="id" column="ID" />
		<result property="name" column="NAME" />
		<result property="state" column="STATE" typeHandler="org.apache.ibatis.type.EnumTypeHandler" />
	</resultMap>
	<resultMap id="card" type="com.mrprez.roborally.model.Card">
		<constructor>
			<idArg column="RAPIDITY" javaType="int"/>
			<arg column="TRANSLATION" javaType="int"/>
			<arg column="ROTATION" javaType="int"/>
		</constructor>
	</resultMap>
	<resultMap id="gameBoard" type="com.mrprez.roborally.dto.GameBoardDto">
		<result property="boardId" column="BOARD_ID" />
		<result property="name" column="NAME" />
		<result property="gameState" column="STATE" typeHandler="org.apache.ibatis.type.EnumTypeHandler" />
		<result property="sizeX" column="SIZE_X" />
		<result property="sizeY" column="SIZE_Y" />
		<collection property="targetList" ofType="com.mrprez.roborally.dto.TargetDto">
			<result property="x" column="TARGET_X"/>
			<result property="y" column="TARGET_Y"/>
		</collection>
	</resultMap>
	<resultMap id="square" type="com.mrprez.roborally.dto.SquareDto">
		<result property="x" column="X" />
		<result property="y" column="Y" />
		<result property="clazz" column="CLASS" />
		<result property="args" column="ARGS" />
		<result property="wallTop" column="WALL_TOP" />
		<result property="wallDown" column="WALL_DOWN" />
		<result property="wallLeft" column="WALL_LEFT" />
		<result property="wallRight" column="WALL_RIGHT" />
	</resultMap>
	<resultMap id="robotDto" type="com.mrprez.roborally.dto.RobotDto">
		<result property="number" column="NUMBER" />
		<result property="x" column="X" />
		<result property="y" column="Y" />
		<result property="direction" column="DIRECTION" typeHandler="org.apache.ibatis.type.EnumTypeHandler" />
		<result property="health" column="HEALTH" />
		<result property="ghost" column="GHOST" />
		<result property="targetNumber" column="TARGET_NB" />
		<result property="powerDownState" column="POWER_DOWN_STATE"/>
		<result property="username" column="USER_NAME"/>
		<result property="hasPlayed" column="HAS_PLAYED"/>
		<collection property="cardList" ofType="com.mrprez.roborally.dto.CardDto">
			<result property="rapidity" column="RAPIDITY" />
			<result property="translation" column="TRANSLATION"/>
			<result property="rotation" column="ROTATION"/>
		</collection>
	</resultMap>
	<resultMap id="action" type="com.mrprez.roborally.dto.ActionDto">
		<result property="roundNb" column="ROUND_NB" />
		<result property="stageNb" column="STAGE_NB" />
		<result property="actionNb" column="ACTION_NB" />
		<result property="cardRapidity" column="CARD_RAPIDITY" />
		<result property="squareX" column="SQUARE_X" />
		<result property="squareY" column="SQUARE_Y" />
		<collection property="moveList" ofType="com.mrprez.roborally.dto.MoveDto" >
			<result property="stepNb" column="STEP_NB" />
			<result property="moveNb" column="MOVE_NB" />
			<result property="robotNb" column="ROBOT_NB" />
			<result property="type" column="TYPE" typeHandler="org.apache.ibatis.type.EnumTypeHandler" />
			<result property="args" column="ARGS" />
		</collection>
	</resultMap>
	<resultMap id="playerRobot" type="com.mrprez.roborally.model.Robot">
		<id property="number" column="NUMBER" />
		<result property="direction" column="DIRECTION" typeHandler="org.apache.ibatis.type.EnumTypeHandler" />
		<result property="health" column="HEALTH" />
		<result property="targetNumber" column="TARGET_NB" />
		<result property="powerDownState" column="POWER_DOWN_STATE" typeHandler="org.apache.ibatis.type.EnumTypeHandler" />
		<collection property="cards" resultMap="card" ofType="com.mrprez.roborally.model.Card"/>
	</resultMap>
	<resultMap id="robotState" type="com.mrprez.roborally.dto.RobotStateDto">
		<result property="robotNb" column="ROBOT_NB"/>
		<result property="roundNb" column="ROUND_NB"/>
		<result property="health" column="HEALTH"/>
		<result property="direction" column="DIRECTION" typeHandler="org.apache.ibatis.type.EnumTypeHandler" />
		<result property="x" column="X"/>
		<result property="y" column="Y"/>
		<result property="ghost" column="GHOST"/>
		<result property="powerDownState" column="POWER_DOWN_STATE"/>
	</resultMap>
	<resultMap id="invitation" type="com.mrprez.roborally.model.Invitation">
		<constructor>
			<arg column="E_MAIL" javaType="string"/>
			<arg column="TOKEN" javaType="string"/>
			<arg column="GAME_ID" javaType="int"/>
		</constructor>
	</resultMap>

	<select id="checkUser" resultMap="userResultMap">
		select USERNAME, E_MAIL from ACCOUNT where
		USERNAME=#{username} and PASSWORD=#{password}
	</select>
	<select id="getUserByEMail" resultMap="userResultMap">
		select USERNAME, E_MAIL from ACCOUNT where E_MAIL=#{eMail}
	</select>
	<select id="selectUserGames" resultMap="game">
		select ID, NAME from GAME 
		join ROBOT on ROBOT.GAME_ID=GAME.ID
		where ROBOT.USER_NAME=#{username}
	</select>
	<select id="selectGame" resultMap="gameBoard">
		select GAME.BOARD_ID,NAME,STATE,SIZE_X,SIZE_Y,TARGET.X as TARGET_X,TARGET.Y as TARGET_Y from GAME
		join BOARD on BOARD.ID=GAME.BOARD_ID
		join TARGET on TARGET.BOARD_ID=BOARD.ID
		where GAME.ID=#{id}
	</select>
	<select id="selectSquareList" resultMap="square">
		select X,Y,CLASS,ARGS,WALL_UP,WALL_DOWN,WALL_LEFT,WALL_RIGHT from SQUARE where BOARD_ID=#{boardId}
	</select>
	<select id="selectRobotList" resultMap="robotDto">
		select NUMBER,X,Y,DIRECTION,HEALTH,GHOST,POWER_DOWN_STATE,
				RAPIDITY,TRANSLATION,ROTATION,TARGET_NB,USER_NAME,HAS_PLAYED
		from ROBOT
		left join CARD on ROBOT.GAME_ID=CARD.GAME_ID and ROBOT.NUMBER=CARD.ROBOT_NB 
		where ROBOT.GAME_ID=#{gameId}
		order by NUMBER, INDEX
	</select>
	<select id="selectRobot" resultMap="playerRobot">
		select NUMBER,HEALTH,DIRECTION,TARGET_NB,POWER_DOWN_STATE,RAPIDITY,TRANSLATION,ROTATION from ROBOT
		left join CARD on CARD.ROBOT_NB=ROBOT.NUMBER and CARD.GAME_ID=ROBOT.GAME_ID
		where ROBOT.GAME_ID=#{gameId} 
		<if test="username != null">
			and ROBOT.USER_NAME=#{username}
		</if>
		<if test="robotNb != null">
			and ROBOT.NUMBER=#{robotNb}
		</if>
		order by INDEX asc
	</select>
	<select id="selectHistory" resultMap="action">
		select ACTION.ROUND_NB, ACTION.STAGE_NB, ACTION.ACTION_NB, MOVE.STEP_NB, MOVE.MOVE_NB, ACTION.CARD_RAPIDITY, ACTION.SQUARE_X, ACTION.SQUARE_Y, MOVE.ROBOT_NB, MOVE.TYPE, MOVE.ARGS
		from ACTION
		left join MOVE on  ACTION.GAME_ID=MOVE.GAME_ID and ACTION.ROUND_NB=MOVE.ROUND_NB and ACTION.STAGE_NB=MOVE.STAGE_NB and ACTION.ACTION_NB=MOVE.ACTION_NB 
		where ACTION.GAME_ID=#{gameId}
		order by ACTION.ROUND_NB, ACTION.STAGE_NB, ACTION.ACTION_NB, MOVE.STEP_NB, MOVE.MOVE_NB asc
	</select>
	<select id="selectState" resultMap="robotState">
		select ROBOT_NB, ROUND_NB, X, Y, DIRECTION, HEALTH, GHOST, POWER_DOWN_STATE from ROBOT_STATE where GAME_ID=#{gameId}
		order by ROUND_NB, ROBOT_NB
	</select>
	<select id="selectCardList" resultMap="card">
		select RAPIDITY,TRANSLATION,ROTATION from CARD 
		where GAME_ID=#{gameId} and DISCARDED=#{discarded} and ROBOT_NB is null
		order by INDEX
	</select>
	<select id="selectInvitations" resultMap="invitation">
		select GAME_ID, E_MAIL, TOKEN from INVITATION
		<where>
			<if test="eMail!=null">E_MAIL=#{eMail}</if>
			<if test="gameId!=null">GAME_ID=#{gameId}</if>
		</where>
	</select>
	
	<insert id="insertUser">
		insert into ACCOUNT (USERNAME, E_MAIL, PASSWORD) values (#{user.username}, #{user.eMail}, #{password})
	</insert>
	<insert id="insertGameBoard" keyProperty="id" keyColumn="ID" useGeneratedKeys="true">
		insert into BOARD (TYPE, SIZE_X, SIZE_Y) values ('Game', #{sizeX}, #{sizeY})
	</insert>
	<insert id="insertSquare">
		insert into SQUARE (BOARD_ID, X, Y, CLASS, ARGS, WALL_UP, WALL_DOWN, WALL_LEFT, WALL_RIGHT)
		values (#{boardId}, #{x}, #{y}, #{clazz}, #{args}, #{wallUp}, #{wallDown}, #{wallLeft}, #{wallRight})
	</insert>
	<insert id="insertTarget">
		insert into TARGET (BOARD_ID, TARGET_NB, X, Y) values (#{boardId}, #{targetNb}, #{x}, #{y})
	</insert>
	<insert id="insertGame" keyProperty="id" keyColumn="ID" useGeneratedKeys="true">
		insert into GAME (OWNER, NAME, STATE, BOARD_ID) values (#{ownername}, #{name}, #{state}, #{board.id})
	</insert>
	<insert id="insertCard">
		insert into CARD (GAME_ID, RAPIDITY, TRANSLATION, ROTATION, INDEX, ROBOT_NB, DISCARDED) 
		values (#{gameId}, #{card.rapidity}, #{card.translation}, #{card.rotation}, #{index}, #{robotNb}, 
			<if test="discarded!=null">#{discarded}</if><if test="discarded==null">false</if>
		)
	</insert>
	<insert id="insertRobot">
		insert into ROBOT (NUMBER, GAME_ID, X, Y, DIRECTION, HEALTH, GHOST, POWER_DOWN_STATE, TARGET_NB, USER_NAME)
		values (#{robot.number}, #{gameId}, #{robot.square.x}, #{robot.square.y}, #{robot.direction}, 
				#{robot.health}, #{robot.ghost}, #{robot.powerDownState}, #{robot.targetNumber}, #{robot.username})
	</insert>
	<insert id="insertAction">
		insert into ACTION (GAME_ID, ROUND_NB, STAGE_NB, ACTION_NB, CARD_RAPIDITY, SQUARE_X, SQUARE_Y)
		values (#{gameId}, #{roundNb}, #{stageNb}, #{actionIndex}, #{action.cardRapidity}, #{action.squareX}, #{action.squareY} )
	</insert>
	<insert id="insertMove">
		insert into MOVE (GAME_ID, ROUND_NB, STAGE_NB, ACTION_NB, STEP_NB, MOVE_NB, ROBOT_NB, TYPE, ARGS)
		values (#{gameId}, #{roundNb}, #{stageNb}, #{actionIndex}, #{stepIndex}, #{moveIndex}, #{move.robot.number},  #{move.type}, #{move.args} )
	</insert>
	<insert id="insertRobotState">
		insert into ROBOT_STATE (GAME_ID, ROBOT_NB, ROUND_NB, X, Y, DIRECTION, HEALTH, GHOST, POWER_DOWN_STATE)
		values (#{gameId}, #{robotNb}, #{roundNb}, #{state.x}, #{state.y}, #{state.direction}, #{state.health}, #{state.ghost}, #{state.powerDownState})
	</insert>
	<insert id="insertInvitation">
		insert into INVITATION (GAME_ID, E_MAIL, TOKEN) values (#{gameId}, #{eMail}, #{token})
	</insert>
	
	<update id="updateGameState">
		update GAME set STATE=#{state} where ID=#{id}
	</update>
	<update id="updateHandCard">
		update CARD set INDEX=#{index} where GAME_ID=#{gameId} and RAPIDITY=#{rapidity}
	</update>
	<update id="updateRobot">
		update ROBOT set X=#{robot.square.x}, Y=#{robot.square.y}, DIRECTION=#{robot.direction}, 
			HEALTH=#{robot.health}, GHOST=#{robot.ghost}, TARGET_NB=#{robot.targetNumber},
			POWER_DOWN_STATE=#{robot.powerDownState}, HAS_PLAYED=#{robot.hasPlayed}
		where NUMBER=#{robot.number} and GAME_ID=#{gameId}
	</update>
	<update id="updateCard">
		update CARD set INDEX=#{index}, ROBOT_NB=#{robotNb}, DISCARDED=#{discarded}
		where GAME_ID=#{gameId} and RAPIDITY=#{card.rapidity}
	</update>
	<update id="updateRobotPowerDownState">
		update ROBOT set POWER_DOWN_STATE=#{powerDownState} where NUMBER=#{robotNb} and GAME_ID=#{gameId}
	</update>
	<update id="updateRobotHasPlayed">
		update ROBOT set HAS_PLAYED=#{hasPlayed} where NUMBER=#{robotNb} and GAME_ID=#{gameId}
	</update>
	
	<delete id="deleteInvitation">
		delete from INVITATION where E_MAIL=#{eMail} and GAME_ID=#{gameId}
	</delete>
</mapper>